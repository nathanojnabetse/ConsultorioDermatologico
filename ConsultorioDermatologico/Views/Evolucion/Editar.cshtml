@using ConsultorioDermatologico.Models
@model RegistroEvolucionCLS

@{
    ViewBag.Title = "Editar";
}

<h2 style="padding-top:1em">Editar evolución</h2>
<div id="error" class="text-danger"></div>

@using (Ajax.BeginForm("GuardarEdicion", "Evolucion", null, new AjaxOptions///EDITAR cambiar estas cosas
{
    HttpMethod = "POST",
    OnSuccess = "GuardarE"
}, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    <input type="hidden" id="idHistoriaClinica" name="idHistoriaClinica" value=@ViewBag.idHistoriaClinica>
    <input type="hidden" id="idEvolucion" name="idEvolucion" value=@ViewBag.idEvolucion>

    <div class="row espacio">
        <div class="col-sm-2">
            <div class="row justify-content-center">
                @Html.ActionLink("Regresar", "EvolucionPaciente", "HistoriaClinica", new { idEvolucion = ViewBag.idEvolucion }, new { @class = " btn btn-outline-secondary rounded-pill llenar-espacio" })
            </div>
        </div>
        <div class="col-sm-2">
            <div class="row justify-content-center">
                <button type="submit" class="btn btn-primary rounded-pill llenar-espacio" onclick="UploadPic()">Guardar</button>
            </div>
        </div>
    </div>

    <div class="container">
        <div class="row">

            <div class="col-sm-4 col-12 espacio">

                <div class="border espacio">

                    <div id="divCanvas" style=" display: none">
                        <canvas class="img-responsive" id="pizarra" style="background: url(../../Resources/mapaCorporal.png);"></canvas>
                    </div>

                    <div id="divImgMapa">
                        <img class="col-sm-12 imagenFondo" id="imgFotomp" src="data:image/jpg;base64, @Model.evolucion.mapaCorporal" />
                    </div>
                    @Html.Hidden("mapaCorporal")
                    <div class="centrar">
                        <button type="button" onclick=" EditarCanvas()" class="btn btn-outline-primary centrar btn-sm llenar-espacio">Editar mapa</button>
                    </div>


                </div>
            </div>

            <div class="col-sm-8">
                <h6 class="text-muted"> @ViewBag.nombrePaciente - Fecha de visita: @Model.evolucion.fechaVisita.ToString("yyyy-MM-dd")</h6>
                <div class="row">
                    <div class="espacio col-md-6">
                        <div class="border espacio">
                            <div>
                                @Html.LabelFor(p => p.evolucion.motivoConsulta)
                                @Html.EditorFor(p => p.evolucion.motivoConsulta, new { htmlAttributes = new { @class = "form-control col-md-12", @style = "height: 8em;", @Value = Model.evolucion.motivoConsulta } })
                                @Html.ValidationMessage("evolucion.motivoConsulta", new { @class = "text-danger" })
                            </div>
                            <div>
                                @Html.LabelFor(p => p.evolucion.diagnostico)
                                @Html.EditorFor(p => p.evolucion.diagnostico, new { htmlAttributes = new { @class = "form-control col-md-12", @style = "height: 8em;", @Value = Model.evolucion.diagnostico } })
                                @Html.ValidationMessage("evolucion.diagnostico", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>

                    <div class="espacio col-md-6">
                        <div class="border espacio">
                            <div>
                                @Html.LabelFor(p => p.evolucion.prescripcion)
                                @Html.EditorFor(p => p.evolucion.prescripcion, new { htmlAttributes = new { @class = "form-control col-md-12", @style = "height: 8em;", @Value = Model.evolucion.prescripcion } })
                                @Html.ValidationMessage("evolucion.prescripcion", new { @class = "text-danger" })
                            </div>
                            <div>
                                @Html.LabelFor(p => p.evolucion.recomendaciones)
                                @Html.EditorFor(p => p.evolucion.recomendaciones, new { htmlAttributes = new { @class = "form-control col-md-12", @style = "height: 8em;", @Value = Model.evolucion.recomendaciones } })
                                @Html.ValidationMessage("evolucion.recomendaciones", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>
            </div>

        </div>

        <div class="row">
            <div class="col-sm-4 espacio">
                <div class="border espacio " style="height:auto;">
                    <div>
                        @Html.LabelFor(p => p.evolucion.examenFisico)
                        @Html.EditorFor(p => p.evolucion.examenFisico, new { htmlAttributes = new { @class = "form-control col-md-12", @style = "height: 8em;", @Value = Model.evolucion.examenFisico } })
                        @Html.ValidationMessage("evolucion.examenFisico", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-sm-8 espacio">
                <div class="border espacio" style="height:auto; overflow-y: scroll; min-height: 10em;">

                    <div class="centrar">
                        <a href="#carouselControls" role="button" data-slide="prev">
                            <span class="fa fa-chevron-circle-left" aria-hidden="true"></span>
                            <span class="sr-only">Anterior</span>
                        </a>

                        <a href="#carouselControls" role="button" data-slide="next">
                            <span class="fa fa-chevron-circle-right" aria-hidden="true"></span>
                            <span class="sr-only">Siguiente</span>
                        </a>
                    </div>
                    <div id="carouselControls" class="carousel slide" data-ride="carousel">

                        <div class="carousel-inner">

                            @if (@Model.foto1 != null)
                            {<div class="espacio carousel-item active">
                                    <img class="img-responsive col-sm-12" id="imgFoto1" style="display:block" src="data:image/@Model.foto1.extension;base64, @Model.foto1.foto" />
                                    <span>1.-</span>
                                    @Html.TextBox("foto1", "", new { type = "file", id = "fupFoto1" })
                                    @Html.Hidden("foto1NombreFoto")
                                    <input type="hidden" id="idFoto1" name="idFoto1" value=@Model.foto1.idFoto>
                                </div>}
                            else
                            {
                                <div class="espacio carousel-item active">
                                    <img class="img-responsive col-sm-12" id="imgFoto1" style="display:block" />
                                    <span>1.-</span>
                                    @Html.TextBox("foto1", "", new { type = "file", id = "fupFoto1" })
                                    @Html.Hidden("foto1NombreFoto")
                                </div>
                            }
                            @if (@Model.foto2 != null)
                            {
                                <div class="espacio carousel-item">
                                    <img class="img-responsive col-sm-12" id="imgFoto2" style="display:block" src="data:image/@Model.foto2.extension;base64, @Model.foto2.foto" />
                                    <span>2.-</span>
                                    @Html.TextBox("foto2", "", new { type = "file", id = "fupFoto2" })
                                    <input type="hidden" id="idFoto2" name="idFoto2" value=@Model.foto2.idFoto>
                                </div>
                            }
                            else
                            {
                                <div class="espacio carousel-item">
                                    <img class="img-responsive col-sm-12" id="imgFoto2" style="display:block" />
                                    <span>2.-</span>
                                    @Html.TextBox("foto2", "", new { type = "file", id = "fupFoto2" })
                                    @Html.Hidden("foto2NombreFoto")
                                </div>
                            }
                            @if (@Model.foto3 != null)
                            {
                                <div class="espacio carousel-item">
                                    <img class="img-responsive col-sm-12" id="imgFoto3" style="display:block" src="data:image/@Model.foto3.extension;base64, @Model.foto3.foto" />
                                    <span>3.-</span>
                                    @Html.TextBox("foto3", "", new { type = "file", id = "fupFoto3" })
                                    <input type="hidden" id="idFoto3" name="idFoto3" value=@Model.foto3.idFoto>
                                </div>
                            }
                            else
                            {
                                <div class="espacio carousel-item">
                                    <img class="img-responsive col-sm-12" id="imgFoto3" style="display:block" />
                                    <span>3.-</span>
                                    @Html.TextBox("foto3", "", new { type = "file", id = "fupFoto3" })
                                    @Html.Hidden("foto3NombreFoto")
                                </div>
                            }
                            @if (@Model.foto4 != null)
                            {
                                <div class="espacio carousel-item">
                                    <img class="img-responsive col-sm-12" id="imgFoto4" style="display:block" src="data:image/@Model.foto4.extension;base64, @Model.foto4.foto" />
                                    <span>4.-</span>
                                    @Html.TextBox("foto4", "", new { type = "file", id = "fupFoto4" })
                                    <input type="hidden" id="idFoto4" name="idFoto4" value=@Model.foto4.idFoto>
                                </div>
                            }
                            else
                            {
                                <div class="espacio carousel-item">
                                    <img class="img-responsive col-sm-12" id="imgFoto4" style="display:block" />
                                    <span>4.-</span>
                                    @Html.TextBox("foto4", "", new { type = "file", id = "fupFoto4" })
                                    @Html.Hidden("foto4NombreFoto")
                                </div>
                            }
                            @if (@Model.foto5 != null)
                            {
                                <div class="espacio carousel-item">
                                    <img class="img-responsive col-sm-12" id="imgFoto5" style="display:block" src="data:image/@Model.foto5.extension;base64, @Model.foto5.foto" />
                                    <span>5.-</span>
                                    @Html.TextBox("foto5", "", new { type = "file", id = "fupFoto5" })
                                    <input type="hidden" id="idFoto5" name="idFoto5" value=@Model.foto5.idFoto>
                                </div>
                            }
                            else
                            {
                                <div class="espacio carousel-item">
                                    <img class="img-responsive col-sm-12" id="imgFoto5" style="display:block" />
                                    <span>5.-</span>
                                    @Html.TextBox("foto5", "", new { type = "file", id = "fupFoto5" })
                                    @Html.Hidden("foto5NombreFoto")
                                </div>
                            }
                            @if (@Model.foto6 != null)
                            {
                                <div class="espacio carousel-item">
                                    <img class="img-responsive col-sm-12" id="imgFoto6" style="display:block" src="data:image/@Model.foto6.extension;base64, @Model.foto6.foto" />
                                    <span>6.-</span>
                                    @Html.TextBox("foto6", "", new { type = "file", id = "fupFoto6" })
                                    <input type="hidden" id="idFoto6" name="idFoto6" value=@Model.foto6.idFoto>
                                </div>
                            }
                            else
                            {
                                <div class="espacio carousel-item">
                                    <img class="img-responsive col-sm-12" id="imgFoto6" style="display:block" />
                                    <span>6.-</span>
                                    @Html.TextBox("foto6", "", new { type = "file", id = "fupFoto6" })
                                    @Html.Hidden("foto6NombreFoto")
                                </div>
                            }

                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
}

@Html.Hidden("RedirectTo", Url.Action("EvolucionPaciente", "HistoriaClinica", new { idEvolucion = @ViewBag.idEvolucion }))

<script>

    ///DIBUJO EN EL CANVAS ***************************
    // Variables  
    let miCanvas = document.querySelector('#pizarra');
    let lineas = [];
    let correccionX = 0;
    let correccionY = 0;
    let pintarLinea = false;
    // Marca el nuevo punto
    let nuevaPosicionX = 0;
    let nuevaPosicionY = 0;

    let posicion = miCanvas.getBoundingClientRect()
    correccionX = posicion.x;
    correccionY = posicion.y;
    miCanvas.width = 300;
    miCanvas.height = 300;
    //var heightRatio = 1; //Hacer el canvas cuadrado
    //miCanvas.height = miCanvas.width * heightRatio;
    // Función para dibujar líneas
    function empezarDibujo() {
        pintarLinea = true;
        lineas.push([]);
    };

    //Funcion que guarda la posicion de la nueva línea
    function guardarLinea() {
        lineas[lineas.length - 1].push({
            x: nuevaPosicionX,
            y: nuevaPosicionY
        });
    }

    //Funcion dibuja la linea
    function dibujarLinea(event) {
        event.preventDefault();
        if (pintarLinea) {
            let ctx = miCanvas.getContext('2d')
            // Estilos de linea
            ctx.lineJoin = ctx.lineCap = 'round';
            ctx.lineWidth = 1;
            // Color de la linea
            ctx.strokeStyle = '#f00';
            // Marca el nuevo punto
            if (event.changedTouches == undefined) {
                // Versión ratón
                nuevaPosicionX = event.layerX;
                nuevaPosicionY = event.layerY;
            } else {
                // Versión touch, pantalla tactil
                nuevaPosicionX = event.changedTouches[0].pageX - correccionX;
                nuevaPosicionY = event.changedTouches[0].pageY - correccionY;
            }
            // Guarda la linea
            guardarLinea();
            // Redibuja todas las lineas guardadas
            ctx.beginPath();
            lineas.forEach(function (segmento) {
                ctx.moveTo(segmento[0].x, segmento[0].y);
                segmento.forEach(function (punto, index) {
                    ctx.lineTo(punto.x, punto.y);
                });
            });
            ctx.stroke();
        }
    }

    //Funcion que deja de dibujar la linea
    function pararDibujar() {
        pintarLinea = false;
        guardarLinea();
    }

    //Eventos raton (movimiento)
    miCanvas.addEventListener('mousedown', empezarDibujo, false);
    miCanvas.addEventListener('mousemove', dibujarLinea, false);
    miCanvas.addEventListener('mouseup', pararDibujar, false);

    //Eventos pantallas táctiles
    miCanvas.addEventListener('touchstart', empezarDibujo, false);
    miCanvas.addEventListener('touchmove', dibujarLinea, false);

    // Visualización de imagenes al agregar
    var imgFoto1 = document.getElementById("imgFoto1");//imagen que se muestra
    var fupFoto1 = document.getElementById("fupFoto1");//archivo seleccionado
    fupFoto1.onchange = function () { //al elegir la foto seleccionada
        var files = fupFoto1.files[0];
        var reader = new FileReader();//lectura del archivo
        reader.onloadend = function () {
            imgFoto1.src = reader.result; //carga la imagen
            document.getElementById("foto1NombreFoto").value = files.name; //nombre a guardar
        }
        reader.readAsDataURL(files);
    }
    var imgFoto2 = document.getElementById("imgFoto2");//imagen que se muestra
    var fupFoto2 = document.getElementById("fupFoto2");//archivo seleccionado
    fupFoto2.onchange = function () {//al elegir la foto seleccionada
        var files = fupFoto2.files[0];
        var reader = new FileReader();//lectura del archivo
        reader.onloadend = function () {
            imgFoto2.src = reader.result;//carga la imagen
            document.getElementById("foto2NombreFoto").value = files.name; //nombre a guardar
        }
        reader.readAsDataURL(files);
    }
    var imgFoto3 = document.getElementById("imgFoto3");//imagen que se muestra
    var fupFoto3 = document.getElementById("fupFoto3");//archivo seleccionado
    fupFoto3.onchange = function () {//al elegir la foto seleccionada
        var files = fupFoto3.files[0];
        var reader = new FileReader();//lectura del archivo
        reader.onloadend = function () {
            imgFoto3.src = reader.result;//carga la imagen
            document.getElementById("foto3NombreFoto").value = files.name; //nombre a guardar
        }
        reader.readAsDataURL(files);
    }
    var imgFoto4 = document.getElementById("imgFoto4");//imagen que se muestra
    var fupFoto4 = document.getElementById("fupFoto4");//archivo seleccionado
    fupFoto4.onchange = function () {//al elegir la foto seleccionada
        var files = fupFoto4.files[0];
        var reader = new FileReader();//lectura del archivo
        reader.onloadend = function () {
            imgFoto4.src = reader.result;//carga la imagen
            document.getElementById("foto4NombreFoto").value = files.name; //nombre a guardar
        }
        reader.readAsDataURL(files);
    }
    var imgFoto5 = document.getElementById("imgFoto5");//imagen que se muestra
    var fupFoto5 = document.getElementById("fupFoto5");//archivo seleccionado
    fupFoto5.onchange = function () {//al elegir la foto seleccionada
        var files = fupFoto5.files[0];
        var reader = new FileReader();//lectura del archivo
        reader.onloadend = function () {
            imgFoto5.src = reader.result;//carga la imagen
            document.getElementById("foto5NombreFoto").value = files.name; //nombre a guardar
        }
        reader.readAsDataURL(files);
    }
    var imgFoto6 = document.getElementById("imgFoto6");//imagen que se muestra
    var fupFoto6 = document.getElementById("fupFoto6");//archivo seleccionado
    fupFoto6.onchange = function () {//al elegir la foto seleccionada
        var files = fupFoto6.files[0];
        var reader = new FileReader();//lectura del archivo
        reader.onloadend = function () {
            imgFoto6.src = reader.result;//carga la imagen
            document.getElementById("foto6NombreFoto").value = files.name; //nombre a guardar
        }
        reader.readAsDataURL(files);
    }

    //Recibe un respuesta desde la acción GuardarEdicion del controlador Evolucion (la respuesta es el número de registros afectados)
    function GuardarE(rpta) {
        rpta = rpta.replace(/[{()}]/g, '');//Se eliminan caracteres innecesarios en la rpta
        rpta = rpta.split(", ");
        if (rpta == "1" || rpta == "2" || rpta == "3" || rpta == "4" || rpta == "5" || rpta == "6" || rpta == "7" || rpta == "8") {
           
            alert("Se ejecuto correctame")
            var url = $("#RedirectTo").val(); 
            location.href = url; //redirección hacia la vista de información de la Evolución
        } else {
            $('#error').html(rpta);
            alert("Ocurrió un error") //se recibió una respuesta vacía
        }
    }

    //Guardar las líneas realizadas en el canvas
    function UploadPic() {
        var x = document.getElementById("divCanvas");
        // Generar los datos de la imagen
        if (x.style.display === "none") {
            document.getElementById("mapaCorporal").value = null; //si no se ha editado el canvas
        }
        else {
            var Pic = document.getElementById("pizarra").toDataURL("image/png"); //se obtiene un url con una cadena correspondiene a la imagen en base64
            Pic = Pic.replace(/^data:image\/(png|jpg);base64,/, "") //eliminación de datos innecesarios en la cadena de la imagen generada en el canvas
            document.getElementById("mapaCorporal").value = Pic; //asignación a un elemento para ser pasado al controlador
        }
    }

    //Activar o desactivar el canvas para edición
    function EditarCanvas() {
        var x = document.getElementById("divCanvas");
        var y = document.getElementById("divImgMapa");

        if (x.style.display === "none") {//se activa la edición del canvas
            x.style.display = "block";
            x.disabled = false;
            y.style.display = "none";
            y.disabled = true;

        }
        else {
            y.style.display = "block";
            x.disabled = true;
            x.style.display = "none";
            y.disabled = false;
        }
    }
</script>